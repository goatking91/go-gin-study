definitions:
  api.Err:
    properties:
      code:
        type: string
      description:
        type: string
      message:
        type: string
    type: object
  api.ErrorRes:
    properties:
      error:
        $ref: '#/definitions/api.Err'
      method:
        type: string
      path:
        type: string
      txid:
        type: string
    type: object
  api.Pagination:
    properties:
      currentPage:
        type: integer
      totalItems:
        type: integer
      totalPage:
        type: integer
    type: object
  api.SuccessRes:
    properties:
      data: {}
      method:
        type: string
      path:
        type: string
      txid:
        type: string
    type: object
  controller.pong:
    properties:
      datetime:
        type: string
      hostname:
        type: string
      message:
        type: string
      uri:
        type: string
    type: object
  model.Book:
    properties:
      author:
        type: string
      createdAt:
        type: string
      description:
        type: string
      title:
        type: string
      uid:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  title: Practice2 API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: 등록된 책의 list를 보는 API입니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.SuccessRes'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.Pagination'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/model.Book'
                        type: array
                    type: object
              type: object
      summary: 책 리스트
      tags:
      - books
    post:
      consumes:
      - application/json
      description: 책을 추가하는 API입니다.
      parameters:
      - description: The input book struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/model.Book'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.ErrorRes'
            - properties:
                error:
                  $ref: '#/definitions/api.Err'
              type: object
      summary: 책 추가
      tags:
      - books
  /books/{uid}:
    delete:
      consumes:
      - application/json
      description: 책의 정보를 삭제하는 API입니다.
      parameters:
      - description: book id
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/api.ErrorRes'
            - properties:
                error:
                  $ref: '#/definitions/api.Err'
              type: object
      summary: 책 삭제
      tags:
      - books
    get:
      consumes:
      - application/json
      description: 책의 정보를 상세하게 보는 API입니다.
      parameters:
      - description: book id
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/model.Book'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/api.ErrorRes'
            - properties:
                error:
                  $ref: '#/definitions/api.Err'
              type: object
      summary: 책 상세 조회
      tags:
      - books
    put:
      consumes:
      - application/json
      description: 책의 정보를 수정하는 API입니다.
      parameters:
      - description: book id
        in: path
        name: uid
        required: true
        type: string
      - description: The input book struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.SuccessRes'
            - properties:
                data:
                  $ref: '#/definitions/model.Book'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.ErrorRes'
            - properties:
                error:
                  $ref: '#/definitions/api.Err'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/api.ErrorRes'
            - properties:
                error:
                  $ref: '#/definitions/api.Err'
              type: object
      summary: 책 업데이트
      tags:
      - books
  /ping:
    get:
      consumes:
      - application/json
      description: 헬스체크를 위한 ping입니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.pong'
      summary: ping
      tags:
      - ping
swagger: "2.0"
